# argocd/applicationset.yaml
# 基于整合配置文件的 ApplicationSet - GitOps 最佳实践
# 通过 app-config.yaml 文件控制应用的启用状态和同步策略
# 纯配置驱动，无需脚本工具，适合 Windows 开发环境

apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet

metadata:
  name: config-driven-apps
  namespace: argocd
  labels:
    app.kubernetes.io/name: config-driven-apps
    app.kubernetes.io/part-of: argocd
    gitops.argoproj.io/type: config-driven
  annotations:
    gitops.argoproj.io/description: "Configuration-driven ApplicationSet for pure GitOps workflow"

spec:
  # 使用矩阵生成器组合应用发现和配置读取
  generators:
  - matrix:
      generators:
      # 第一个生成器：发现应用目录结构
      - git:
          repoURL: https://github.com/liuc-c/k3s-cluster-argocd.git
          revision: HEAD
          directories:
          # 扫描所有应用的环境目录
          - path: "apps/*/overlays/*"
          # 支持直接环境目录（如 monitoring/prod）
          - path: "apps/*/prod"

      # 第二个生成器：读取整合的应用配置文件
      - git:
          repoURL: https://github.com/liuc-c/k3s-cluster-argocd.git
          revision: HEAD
          files:
          - path: "apps/*/app-config.yaml"

  template:
    metadata:
      # 应用名称：app-name-environment
      name: '{{path[1]}}-{{path[path.length-1]}}'
      namespace: argocd

      # 标签系统
      labels:
        # 基础管理标签
        app.kubernetes.io/managed-by: applicationset
        app.kubernetes.io/name: '{{path[1]}}'
        app.kubernetes.io/environment: '{{path[path.length-1]}}'
        app.kubernetes.io/part-of: k3s-cluster

        # 从 YAML 配置读取的标签
        gitops.argoproj.io/app-category: '{{config.argocd.metadata.category}}'
        gitops.argoproj.io/app-owner: '{{config.argocd.metadata.owner}}'
        gitops.argoproj.io/app-version: '{{config.argocd.metadata.version}}'

        # 配置状态标签
        gitops.argoproj.io/enabled: '{{config.argocd.deployment.environments.[path[path.length-1]].enabled}}'
        gitops.argoproj.io/auto-sync: '{{config.argocd.deployment.environments.[path[path.length-1]].autoSync}}'

      # 注解
      annotations:
        gitops.argoproj.io/source-path: '{{path.path}}'
        gitops.argoproj.io/config-path: '{{config.path.path}}'
        gitops.argoproj.io/app-description: '{{config.argocd.metadata.description}}'
        argocd.argoproj.io/managed-by: config-driven-apps

      # 资源清理控制
      finalizers:
        - resources-finalizer.argocd.argoproj.io

    spec:
      project: '{{config.argocd.configuration.project}}'

      # 源配置
      source:
        repoURL: https://github.com/liuc-c/k3s-cluster-argocd.git
        path: '{{path.path}}'
        targetRevision: HEAD

        # Kustomize 配置
        kustomize:
          buildOptions: "--enable-helm"
          commonLabels:
            app.kubernetes.io/managed-by: argocd
            gitops.argoproj.io/environment: '{{path[path.length-1]}}'
            gitops.argoproj.io/config-driven: "true"
          commonAnnotations:
            gitops.argoproj.io/source-path: '{{path.path}}'
            gitops.argoproj.io/last-sync: '{{path.revision}}'

      # 目标配置
      destination:
        name: in-cluster
        namespace: '{{config.argocd.configuration.namespace}}'

      # 动态同步策略：基于 YAML 配置
      syncPolicy:
        # 条件性自动同步：只有当配置中启用时才自动同步
        {{- if and (eq (config.argocd.deployment.enabled) "true") (eq (config.argocd.deployment.environments.[path[path.length-1]].enabled) "true") (eq (config.argocd.deployment.environments.[path[path.length-1]].autoSync) "true") }}
        automated:
          prune: {{config.argocd.deployment.environments.[path[path.length-1]].prune}}
          selfHeal: {{config.argocd.deployment.environments.[path[path.length-1]].selfHeal}}
          allowEmpty: false
        {{- end }}

        # 同步选项：从配置文件读取
        syncOptions: {{config.argocd.configuration.syncOptions}}

        # 重试策略
        retry:
          limit: {{config.argocd.configuration.retryLimit}}
          backoff:
            duration: 5s
            factor: 2
            maxDuration: 3m0s

      # 忽略差异配置
      ignoreDifferences:
      - group: apps
        kind: Deployment
        jsonPointers:
        - /spec/replicas
      - group: ""
        kind: Service
        jsonPointers:
        - /spec/clusterIP

      revisionHistoryLimit: 10

  # ApplicationSet 同步策略
  syncPolicy:
    preserveResourcesOnDeletion: false
    applicationsSync: manual
